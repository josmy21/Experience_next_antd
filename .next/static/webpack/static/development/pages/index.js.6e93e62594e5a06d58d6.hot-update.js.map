{"version":3,"file":"static/webpack/static/development/pages/index.js.6e93e62594e5a06d58d6.hot-update.js","sources":["webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/v1.js","webpack:///./pages/index.js"],"sourcesContent":["/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","/**\n *  Author  : Josmy Jose(josmyjose21@gmail.com)\n *  Date    : 18-05-2019\n **/\n\nimport * as React from \"react\";\nimport stylesheet from \"antd/dist/antd.min.css\";\nimport { Table, Button, Row, Col, Icon, Input, Form } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport EditableContext from \"./constants\";\nimport EditableCell from \"./editableCell\";\nimport Styles from \"./style\";\nimport uuidv1 from 'uuid/v1';\n\n/**Creating App Component for rendering the complete layout including table */\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    /**  Intializing the State variables  */\n    this.state = {\n      count: 2,\n      editingKey: \"\",\n      disableButton:false,\n      dataSource: [\n        {\n          key: \"0\",\n          name: \"Josmy\",\n          email: \"josmyjose21@gmail.com\"\n        },\n        {\n          key: \"1\",\n          name: \"Jose\",\n          email: \"JoseGeorge@gmail.com\"\n        }\n      ]\n    };\n    /**Setting  the Columns for the table with properties title,dataIndex,key,editable and\n     * render function for rendering components inside columns*/\n\n    this.columns = [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\",\n        editable: true\n      },\n      {\n        title: \"Email\",\n        dataIndex: \"email\",\n        key: \"email\",\n        editable: true\n      },\n      {\n        title: \"Edit\",\n        dataIndex: \"edit\",\n        key: \"edit\",\n        align: \"center\",\n        render: (text, record) => {\n          const editable = this.isEditing(record);\n          const { dataSource, editingKey } = this.state;\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    href=\"javascript:;\"\n                    onClick={() => this.save(form, record.key)}\n                    style={Styles.save}\n                  >\n                    Save\n                  </a>\n                )}\n              </EditableContext.Consumer>\n\n              <a href=\"javascript:;\" onClick={() => this.cancel(record.key)}>\n                Cancel\n              </a>\n            </span>\n          ) : (\n            <a href=\"javascript:;\" onClick={() => this.handleEdit(record.key)}>\n              <Icon type=\"edit\" style={Styles.icon} />\n            </a>\n          );\n        }\n      },\n      {\n        title: \"Delete\",\n        dataIndex: \"delete\",\n        key: \"delete\",\n        align: \"center\",\n        render: (text, record) =>\n          this.state.dataSource.length >= 1 ? (\n            <a\n              href=\"javascript:;\"\n              onClick={() => {\n                this.handleDelete(record.key);\n              }}\n            >\n              <Icon type=\"delete\" style={Styles.icon} />\n            </a>\n          ) : null\n      }\n    ];\n  }\n\n  /**Seting State to local Storage on ComponentDidUpdate  */\n  componentDidUpdate() {\n  \n    localStorage.setItem('states', JSON.stringify(this.state))  \n  }\n\n  /**Getting the state from local Storage on ComponentDidMount */\n  componentDidMount() {\n    // const data = localStorage.getItem('states')\n    // if(data) {\n    //   console.log(data);\n    //   this.setState(prevState => {\n    //     return JSON.parse(data)\n    //   })\n    // }\n  }\n\n\n  /**Funtion\n   * name     :handleAdd\n   * arguments:none\n   * purpose  :updating the data source and incrementing count.\n   * return   :none\n   */\n\n  handleAdd = () => {\n    const { count, dataSource } = this.state;\n    const newData = {\n      key: uuidv1(),\n      name:\"\",\n      email: \"\",\n    };\n    \n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1,\n        editingKey:count,\n        disableButton:true\n      });\n    \n  \n  };\n\n  /**Funtion\n   * name     :handleDelete\n   * arguments:key(unique key of the row to be deleted)\n   * purpose  :updating the data source and decrementing count.\n   * return   :none\n   */\n\n  handleDelete = key => {\n    const dataSource = [...this.state.dataSource];\n    const { count } = this.state;\n   \n    this.setState({\n      count: count - 1,\n      dataSource: dataSource.filter(item => item.key !== key),\n      disableButton:false\n    });\n  };\n\n  /**Funtion\n   * name     :handleEdit\n   * arguments:key(unique key of the row to be Edited)\n   * purpose  :setting the editing key to the current key value of the row.\n   * return   :none\n   */\n\n  handleEdit = key => {\n    this.setState({ editingKey: key });\n  };\n\n  /**Funtion\n   * name     :isEditing\n   * arguments:record( row to be Checked)\n   * purpose  :checking whether editingKey and key of the current record same, return \n               true if same.Otherwise return false\n   * return   :boolean value\n   */\n\n  isEditing = record => {\n    const { editingKey } = this.state;\n    return record.key === editingKey;\n  };\n\n  /**Funtion\n   * name     :save\n   * arguments:form,key\n   * purpose  :Splice the old item,Update it with new item entered\n   * return   :return false in case of any validation err\n   */\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row\n        });\n        this.setState({ dataSource: newData, editingKey: \"\" ,disableButton:false});\n      } else {\n        newData.push(row);\n        this.setState({ dataSource: newData, editingKey: \"\",disableButton:false });\n      }\n    });\n  }\n\n  /**Funtion\n   * name     :cancel\n   * arguments:none\n   * purpose  :Setting editingKey empty if user cancelled row editing\n   * return   :return false in case of any validation err\n   */\n\n  cancel = () => {\n    const { dataSource, count } = this.state;\n    dataSource.map(item=>{\n      if(item.name===\"\"||item.email===\"\"){\n        this.setState({\n          count:count-1,\n          dataSource:dataSource.filter(item => item.key !== count-1),\n          disableButton:false\n        })\n      }\n    })\n    this.setState({ editingKey: \"\" });\n  };\n\n  /**Rendering the Ui components */\n  render() {\n    const { dataSource, count,disableButton } = this.state;\n    const components = {\n      body: {\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === \"name\" ? \"text\" : \"email\",\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record)\n        })\n      };\n    });\n    return (\n      <div style={Styles.container}>\n        <style dangerouslySetInnerHTML={{ __html: stylesheet }} />\n        <Row type=\"flex\">\n          <Col>\n            <Text style={{ fontWeight: \"bold\" }}>{dataSource.length} Users</Text>\n          </Col>\n          <Col />\n          <Col />\n\n          <Col offset={21}>\n            <Button\n              onClick={this.handleAdd}\n              type=\"primary\"\n              style={!disableButton?Styles.button_add:null}\n              disabled={disableButton}\n            >\n              Add User\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <EditableContext.Provider value={this.props.form}>\n            <Table\n              dataSource={dataSource}\n              columns={columns}\n              components={components}\n            />\n          </EditableContext.Provider>\n        </Row>\n      </div>\n    );\n  }\n}\nconst EditableFormTable = Form.create()(App);\n\nexport default EditableFormTable;\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjkHA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAQA;AACA;AAnIA;AA4IA;AACA;AAFA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AArJA;AA8JA;AAAA;AAAA;AACA;AACA;AAhKA;AAyKA;AAEA;AACA;AACA;AA7KA;AAgNA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA1NA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAVA;AAiBA;;;AAGA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AA/BA;AAkCA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AALA;AArEA;AAuFA;AAEA;AACA;AACA;;;AADA;AAEA;AACA;AAEA;AACA;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;AAmEA;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAqBA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAFA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAtRA;AACA;AAuRA;AAEA;;;;A","sourceRoot":""}